include_directories(${ROSE_INCLUDES})

if (with-roseQt)
  add_subdirectory(AstEquivalence)
endif()

add_subdirectory(BabelPreprocessor)
add_subdirectory(BinFuncDetect)
add_subdirectory(BinQ)

if(OPENSSL_FOUND)
  add_subdirectory(BinaryCloneDetection)
endif()

add_subdirectory(C_to_Promela)
#add_subdirectory(CertSecureCodeProject)
add_subdirectory(CloneDetection)
add_subdirectory(DataFaultTolerance)

if(PYTHONINTERP_FOUND)
  add_subdirectory(DatalogAnalysis)
endif()

add_subdirectory(DocumentationGenerator)

if(GCJ)
  add_subdirectory(FiniteStateModelChecker)
endif()
#add_subdirectory(graphColoring)
#add_subdirectory(HeaderFilesInclusion)
#add_subdirectory(MPI_Tools)
#add_subdirectory(MacroRewrapper)
#add_subdirectory(OpenMP_Analysis)
#add_subdirectory(OpenMP_Checker)
#add_subdirectory(QtDesignerPlugins)
#add_subdirectory(RoseQt)
#add_subdirectory(arrayOptimization)
#add_subdirectory(UpcTranslation)
#add_subdirectory(autoParallelization)
#add_subdirectory(binaryVisualization)
#add_subdirectory(bugSeeding)
#add_subdirectory(checkPointExample)
#add_subdirectory(highLevelGrammars)
#add_subdirectory(javaport)
#add_subdirectory(programModeling)
#add_subdirectory(pragmaParsing)
#add_subdirectory(roseToLLVM)
#add_subdirectory(taintcheck)
#add_subdirectory(RTC)
#add_subdirectory(PowerAwareCompiler)
#add_subdirectory(ManyCoreRuntime)
#add_subdirectory(Fortran_to_C)
#add_subdirectory(minitermite)
#add_subdirectory(mint)
#add_subdirectory(vectorization)
#add_subdirectory(extractMPISkeleton)
#$(OPTIONAL_PROJECTS)
